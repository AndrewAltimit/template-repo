# Pre-commit hooks for code quality
# Run manually: pre-commit run --all-files
# Install hooks: pre-commit install
# Skip specific hooks: SKIP=mypy,shellcheck git commit
# Auto-update hooks: pre-commit autoupdate

repos:
  # Python formatting
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
        language_version: python3.10
        # Line length configured in pyproject.toml

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        # Profile and line length configured in pyproject.toml

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        # Max line length and ignores configured in .flake8

  # YAML formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--unsafe]
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-json
      - id: pretty-format-json
        args: [--autofix, --no-sort-keys]
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: mixed-line-ending
        args: [--fix=lf]

  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        args: [-c, .yamllint.yml]
        types: [yaml]

  # GitHub Actions workflow linting
  - repo: https://github.com/rhysd/actionlint
    rev: v1.7.7
    hooks:
      - id: actionlint

  # Shell script linting
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
        types: [shell]
        args: [-x]  # Follow source statements

  # Python type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.17.1
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --no-error-summary, --explicit-package-bases]
        additional_dependencies: [types-requests, types-PyYAML]
        exclude: ^(docs/|tests/|automation/)

  # Python docstring checking (optional - uncomment if needed)
  # - repo: https://github.com/pycqa/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
  #       args: [--convention=google]
  #       exclude: ^(tests/|automation/)

  # Security checks (commented out for now - too many false positives)
  # - repo: https://github.com/pycqa/bandit
  #   rev: 1.7.5
  #   hooks:
  #     - id: bandit
  #       args: [-r, --skip=B101]
  #       exclude: ^tests/

  # Markdown formatting (commented out - too strict line length rules)
  # - repo: https://github.com/igorshubovych/markdownlint-cli
  #   rev: v0.39.0
  #   hooks:
  #     - id: markdownlint

  # Markdown link checking (containerized for consistency)
  - repo: local
    hooks:
      - id: check-markdown-links
        name: Check markdown links (containerized)
        entry: bash -c 'docker run --rm --user "$(id -u):$(id -g)" -v "$(pwd):/workspace" -w /workspace mcp-code-quality:latest python /workspace/automation/analysis/check-markdown-links.py /workspace --internal-only'
        language: system
        files: '\.md$'
        pass_filenames: false
        stages: [commit]
  #       args: [--fix]

services:
  # Main CGT Validator service
  cgt-validator:
    build:
      context: .
      dockerfile: Dockerfile
    image: cgt-validator:latest
    container_name: cgt-validator
    volumes:
      - ./src:/app/src:ro
      - ./mock_data:/app/mock_data
      - ./downloads:/app/downloads
      - ./reports:/app/reports
      - ./requirements:/app/requirements:ro
    environment:
      - PYTHONPATH=/app/src
      - CGT_ENV=development
    command: ["python", "-m", "cli", "validate", "oregon", "--file", "mock_data/oregon/test_submission.xlsx"]
    networks:
      - cgt-network

  # Development environment with hot reload
  cgt-dev:
    build:
      context: .
      dockerfile: Dockerfile
    image: cgt-validator:dev
    container_name: cgt-dev
    volumes:
      - .:/app
      - pip-cache:/home/cgtuser/.cache/pip
    environment:
      - PYTHONPATH=/app/src
      - CGT_ENV=development
      - PYTHONDEBUG=1
    working_dir: /app
    command: ["/bin/bash"]
    stdin_open: true
    tty: true
    networks:
      - cgt-network

  # Test runner service
  cgt-test:
    build:
      context: .
      dockerfile: Dockerfile
    image: cgt-validator:latest
    container_name: cgt-test
    volumes:
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
      - ./mock_data:/app/mock_data:ro
      - ./htmlcov:/app/htmlcov
      - ./:/app/output
    environment:
      - PYTHONPATH=/app/src
      - CGT_ENV=test
    working_dir: /app
    command: ["pytest", "-v", "--timeout=300", "--cov=src", "--cov-report=html:htmlcov", "--cov-report=xml:output/coverage.xml", "--cov-report=term-missing", "tests/"]
    networks:
      - cgt-network
    stdin_open: false
    tty: false

  # Linting and code quality service
  cgt-lint:
    build:
      context: .
      dockerfile: Dockerfile
    image: cgt-validator:latest
    container_name: cgt-lint
    volumes:
      - ./src:/app/src:ro
      - ./tests:/app/tests:ro
      - ./.flake8:/app/.flake8:ro
    command: ["/bin/sh", "-c", "pip install black flake8 pylint && python -m black --check src tests && python -m flake8 --config=.flake8 src tests && python -m pylint src --disable=R,C"]
    networks:
      - cgt-network

  # Documentation builder
  cgt-docs:
    build:
      context: .
      dockerfile: Dockerfile
    image: cgt-validator:latest
    container_name: cgt-docs
    volumes:
      - ./docs:/app/docs
      - ./src:/app/src:ro
    ports:
      - "8000:8000"
    command: ["python", "-m", "http.server", "8000", "--directory", "docs"]
    networks:
      - cgt-network

  # Automated scraper service
  cgt-scraper:
    build:
      context: .
      dockerfile: Dockerfile
    image: cgt-validator:latest
    container_name: cgt-scraper
    volumes:
      - ./downloads:/app/downloads
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app/src
      - CGT_ENV=production
    command: ["python", "-m", "scrapers.scheduler", "run", "--all-states"]
    networks:
      - cgt-network

  # API service (future REST API)
  cgt-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: cgt-validator:latest
    container_name: cgt-api
    ports:
      - "5000:5000"
    volumes:
      - ./src:/app/src:ro
      - ./mock_data:/app/mock_data:ro
    environment:
      - PYTHONPATH=/app/src
      - CGT_ENV=production
      - FLASK_APP=api.app
    command: ["echo", "API service not yet implemented"]
    networks:
      - cgt-network

  # Python CI service for GitHub Actions
  python-ci:
    build:
      context: .
      dockerfile: Dockerfile
    image: cgt-validator:latest
    container_name: cgt-python-ci
    volumes:
      - .:/app/cgt-validator:rw
    environment:
      - PYTHONPATH=/app/cgt-validator/src
      - CGT_ENV=ci
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    working_dir: /app/cgt-validator
    user: cgtuser
    networks:
      - cgt-network
    stdin_open: false
    tty: false

networks:
  cgt-network:
    driver: bridge

volumes:
  pip-cache: {}
